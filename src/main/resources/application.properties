server.port=9999
#设置spring-boot 编码格式
spring.banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8
#视图层控制 用mvc方式访问templates下的HTML  -----start-------
#让springboot支持jsp
#spring.mvc.view.prefix=classpath:/templates/
#spring.mvc.view.suffix=.jsp
#spring.mvc.static-path-pattern=/static/**
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
##开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf这样配置就可以直接访问static下的HTML(和mvc访问方式二选一)
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#-------------end-----------------------------------
#mysql配置
spring.datasource.url=jdbc:mysql://localhost:3306/maosha?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.mapperLocations=classpath:mapping/*xml
#mybatis.typeAliasesPackage=com.zyf.study.dataobjectbject
#数据库连接池配置druid(springboot暂不支持该数据库连接池)
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.filters=stat
#spring.datasource.maxActive= 20
#spring.datasource.initialSize= 1
#spring.datasource.maxWait= 60000
#spring.datasource.minIdle =1
#spring.datasource.timeBetweenEvictionRunsMillis= 60000
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery= select 'x'
#spring.datasource.testWhileIdle= true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn= false
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxOpenPreparedStatements= 20
# REDIS
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址 （默认为127.0.0.1）
spring.redis.host=132.232.28.164
# Redis服务器连接端口 （默认为6379）
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=2000ms
#log
#logging.file=log.log
#logging.level.com=info
#logging.level.org=info
#logging.level.com.my=debug
#debug=true
#logging.level.com.my.web = debug
#如果采用自定义的mybatis.xml文件，就需要配置下面的文件的内容，主要是定位xml文件的位置，xml文件中有具体的sql操作
#不加的话，就直接是在mapper类中@Select(sql)，直接写sql操作。
# mybatis配置 mybatis.config-location=classpath:mybatis-config.xml // 配置文件位置   mybatis.typeAliasesPackage// 实体类包
#mybatis.typeAliasesPackage=com.tqh.demo/dataobject
#mybatis.mapper-locations=classpath:mappers/*.xml
# AOP 切面
# 添加@EnableAspectJAutoProxy。
#spring.aop.auto= true
# 是否要创建基于子类（CGLIB）的代理（true），而不是基于标准的基于Java接口的代理（false）。
#spring.aop.proxy-target-class= false
# 应用程序上下文初始化器
# 应用指标。
#spring.application.index=
# 应用程序名称。
spring.application.name=
# 国际化（消息源自动配置）
#
#spring.messages.basename= messages
# 以逗号分隔的基础名称列表，每个都在ResourceBundle约定之后。
# 加载的资源束文件缓存到期，以秒为单位。 设置为-1时，软件包将永久缓存。
#spring.messages.cache-seconds= -1
# 设置是否返回到系统区域设置，如果没有找到特定语言环境的文件。
#spring.messages.fallback-to-system-locale= true


